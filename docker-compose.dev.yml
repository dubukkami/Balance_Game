# Docker Compose 개발 환경 설정
# 개발 시 사용할 수 있는 설정 (hot reload, 디버깅 등)

version: '3.8'

services:
  # 백엔드 개발 환경
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: balance-game-backend-dev
    ports:
      - "8080:8080"
      - "5005:5005"  # 디버깅 포트
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:h2:mem:testdb
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
      - SPRING_H2_CONSOLE_ENABLED=true
      - JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    volumes:
      - ./backend/src:/app/src
      - ./backend/build.gradle:/app/build.gradle
      - backend_gradle_cache:/root/.gradle
    networks:
      - app-network
    command: ["./gradlew", "bootRun"]

  # 프론트엔드 개발 환경
  frontend-dev:
    image: node:18-alpine
    container_name: balance-game-frontend-dev
    working_dir: /app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    networks:
      - app-network
    command: ["sh", "-c", "npm install && npm run dev"]
    depends_on:
      - backend-dev

  # 데이터베이스 브라우저 (H2 Console)
  h2-console:
    image: oscarfonts/h2:latest
    container_name: balance-game-h2-console
    ports:
      - "8082:8082"
    environment:
      - H2_OPTIONS=-web -webAllowOthers -tcp -tcpAllowOthers -browser
    networks:
      - app-network

# 개발 환경 볼륨
volumes:
  backend_gradle_cache:
    driver: local
  frontend_node_modules:
    driver: local

# 네트워크 정의
networks:
  app-network:
    driver: bridge