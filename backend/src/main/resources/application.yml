spring:
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: 
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: h2
  
  web:
    cors:
      allowed-origins: "http://localhost:3000"
      allowed-methods: GET, POST, PUT, DELETE, OPTIONS
      allowed-headers: "*"
      allow-credentials: true
  
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:your-google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:your-google-client-secret}
            redirect-uri: "http://localhost:8080/login/oauth2/code/google"
            scope:
              - email
              - profile
          kakao:
            client-id: ${KAKAO_CLIENT_ID:your-kakao-client-id}
            client-secret: ${KAKAO_CLIENT_SECRET:your-kakao-client-secret}
            redirect-uri: "http://localhost:8080/login/oauth2/code/kakao"
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - account_email
              - profile_image
            client-name: Kakao
          naver:
            client-id: ${NAVER_CLIENT_ID:your-naver-client-id}
            client-secret: ${NAVER_CLIENT_SECRET:your-naver-client-secret}
            redirect-uri: "http://localhost:8080/login/oauth2/code/naver"
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - profile_image
            client-name: Naver
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

server:
  port: 8080

# JWT 설정
jwt:
  secret: ${JWT_SECRET:balancegame-secret-key-for-jwt-token-generation-and-validation-should-be-at-least-256-bits}
  token-validity-in-seconds: ${JWT_TOKEN_VALIDITY:86400} # 24시간

# 앱 설정
app:
  oauth2:
    authorized-redirect-uri: ${AUTHORIZED_REDIRECT_URI:http://localhost:3000/oauth2/redirect}

logging:
  level:
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE