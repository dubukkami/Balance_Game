# ===============================
# 🗄️ 데이터베이스 설정 (운영환경)
# ===============================
spring:
  datasource:
    # Neon DB 무료 PostgreSQL 서버 연결
    # 형식: postgresql://username:password@hostname/database?sslmode=require
    url: ${DATABASE_URL:jdbc:postgresql://ep-example-123456.us-east-1.aws.neon.tech/balancegame?sslmode=require}
    username: ${DB_USERNAME:your_neon_username}
    password: ${DB_PASSWORD:your_neon_password}
    driver-class-name: org.postgresql.Driver
    
    # 커넥션 풀 최적화 (무료 플랜 고려)
    hikari:
      maximum-pool-size: 5       # 최대 연결 수 (무료 플랜 제한 고려)
      minimum-idle: 1            # 최소 유휴 연결
      idle-timeout: 300000       # 5분 유휴 타임아웃
      max-lifetime: 1200000      # 20분 최대 생명주기
      connection-timeout: 20000   # 20초 연결 타임아웃
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
    database: postgresql
  
  web:
    cors:
      allowed-origins: ${FRONTEND_URL:https://yourusername.github.io}
      allowed-methods: GET, POST, PUT, DELETE, OPTIONS
      allowed-headers: "*"
      allow-credentials: true
  
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "${BACKEND_URL:https://your-backend.railway.app}/login/oauth2/code/google"
            scope:
              - email
              - profile
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: "${BACKEND_URL:https://your-backend.railway.app}/login/oauth2/code/kakao"
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - account_email
              - profile_image
            client-name: Kakao
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: "${BACKEND_URL:https://your-backend.railway.app}/login/oauth2/code/naver"
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - profile_image
            client-name: Naver
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

server:
  port: ${PORT:8080}

# JWT 설정
jwt:
  secret: ${JWT_SECRET}
  token-validity-in-seconds: ${JWT_TOKEN_VALIDITY:86400}

# 앱 설정
app:
  oauth2:
    authorized-redirect-uri: ${AUTHORIZED_REDIRECT_URI}

logging:
  level:
    org.springframework.web: INFO
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN

# ===============================
# 🏥 헬스체크 및 모니터링 설정
# ===============================
management:
  endpoints:
    web:
      exposure:
        # 운영환경에서 필요한 엔드포인트만 노출 (보안 강화)
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      # 헬스체크 상세 정보 표시 (인증된 사용자만)
      show-details: when-authorized
      # 헬스체크 응답 캐시 (5초) - Railway 무료 플랜 최적화
      cache:
        time-to-live: 5s
    info:
      # 애플리케이션 정보 활성화
      enabled: true
  
  # ===============================
  # ⏰ 자동 종료 스케줄링 (9시-6시 운영)
  # ===============================
  # Railway는 자동으로 비활성 시간 후 슬립 모드
  # 헬스체크 실패 시 자동으로 컨테이너 재시작
  health:
    # 디스크 사용량 체크 (Railway 제한 고려)
    diskspace:
      threshold: 100MB
    # 데이터베이스 연결 체크
    db:
      enabled: true
      
# ===============================
# 🔧 서버 최적화 설정
# ===============================
server:
  # Railway 자동 할당 포트 사용
  port: ${PORT:8080}
  
  # 커넥션 타임아웃 설정 (무료 플랜 최적화)
  tomcat:
    max-connections: 50          # 최대 동시 연결 수
    accept-count: 10             # 대기열 크기
    max-threads: 20              # 최대 스레드 수
    min-spare-threads: 2         # 최소 스레드 수
    connection-timeout: 20000    # 20초 연결 타임아웃
    
  # 압축 설정 (트래픽 최적화)
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
    
  # 에러 페이지 설정
  error:
    whitelabel:
      enabled: false