# ===============================
# 🍻 술하재밸 - 운영 환경 (Railway + Neon DB)
# ===============================

spring:
  # 메모리 절약을 위한 자동 설정 제외
  autoconfigure:
    exclude:
      - org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration
      - org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration
      - org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration
      - org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration
      - org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration

  # PostgreSQL 데이터베이스 설정 (Neon DB)
  datasource:
    url: ${DATABASE_URL}  # Railway에서 자동 설정
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    
    # Railway 512MB 메모리 제한 극한 최적화
    hikari:
      maximum-pool-size: 1        # 극한 메모리 절약 - 단일 커넥션
      minimum-idle: 1             
      idle-timeout: 60000         # 1분으로 단축
      max-lifetime: 300000        # 5분으로 단축  
      connection-timeout: 5000    # 5초
      leak-detection-threshold: 0 # 비활성화
      validation-timeout: 2000    # 2초

  # H2 콘솔 비활성화 (보안)
  h2:
    console:
      enabled: false

  # JPA 설정 (운영용)
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: false
    properties:
      hibernate:
        default_schema: public
        jdbc:
          batch_size: 5               # 배치 크기 감소
          order_inserts: true
          order_updates: true
          batch_versioned_data: true
        format_sql: false
        use_sql_comments: false
        temp:
          use_jdbc_metadata_defaults: false
        cache:
          use_second_level_cache: false
          use_query_cache: false
          use_structured_cache: false
        connection:
          provider_disables_autocommit: false
        # 메모리 절약을 위한 추가 설정
        order_by:
          default_null_ordering: none
        sql:
          init_command: "SET sql_mode=''"
    database: postgresql
    open-in-view: false

  # CORS 설정 (운영 도메인)
  web:
    cors:
      allowed-origins: ${FRONTEND_URL}  # Vercel 배포 URL
      allowed-methods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
        - PATCH
      allowed-headers: "*"
      allow-credentials: true
    resources:
      add-mappings: false  # 정적 리소스 비활성화

  # OAuth2 설정 (운영)
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${BACKEND_URL}/login/oauth2/code/google
            scope:
              - email
              - profile
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${BACKEND_URL}/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - account_email
              - profile_image
            client-name: Kakao
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: ${BACKEND_URL}/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - profile_image
            client-name: Naver
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  # Jackson 직렬화 최적화
  jackson:
    default-property-inclusion: NON_NULL
    serialization:
      write-dates-as-timestamps: false

# 서버 최적화 설정 (Railway 무료 플랜 대응)
server:
  port: ${PORT:8080}  # Railway 자동 포트
  
  # Railway 512MB 메모리 제한 극한 최적화
  tomcat:
    max-connections: 10           # 최소한으로 감소
    accept-count: 2               # 대기열 최소화
    max-threads: 4                # 스레드 수 대폭 감소
    min-spare-threads: 1          # 최소 스레드
    connection-timeout: 8000
    # 메모리 절약을 위한 추가 설정
    max-swallow-size: 1MB         # 스왈로우 크기 제한
    max-http-form-post-size: 1MB  # 포스트 크기 제한
  servlet:
    multipart:
      max-file-size: 1MB          # 파일 크기 제한
      max-request-size: 2MB       # 요청 크기 제한
    # 메모리 절약을 위한 추가 설정
    session:
      timeout: 10m                # 세션 타임아웃 단축
    encoding:
      charset: UTF-8
      enabled: true
    
  compression:
    enabled: true
    mime-types: application/json,text/html,text/css,text/javascript
    min-response-size: 512
    
  # 에러 페이지 비활성화 (보안)
  error:
    whitelabel:
      enabled: false
    include-stacktrace: never
    include-message: never

# JWT 설정 (운영용)
jwt:
  secret: ${JWT_SECRET}  # 강력한 시크릿 키 필수
  token-validity-in-seconds: ${JWT_TOKEN_VALIDITY:604800}  # 7일

# 앱 설정
app:
  name: 술하재밸
  version: ${APP_VERSION:1.0.0}
  environment: production
  oauth2:
    authorized-redirect-uri: ${AUTHORIZED_REDIRECT_URI}  # 프론트엔드 리다이렉트 URL

# 헬스체크 및 모니터링 (Railway 무료플랜 대응)
management:
  endpoints:
    web:
      exposure:
        include: health
      base-path: /actuator
  endpoint:
    health:
      show-details: never  # 보안상 세부사항 숨김
      cache:
        time-to-live: 10s  # 캐시 시간 늘려서 부하 감소
  health:
    diskspace:
      enabled: false  # Railway에서 불필요
    db:
      enabled: true
  metrics:
    enable:
      all: false  # 모든 메트릭스 비활성화로 메모리 절약

# 로깅 설정 (메모리 절약 - Railway 512MB 제한)
logging:
  level:
    root: WARN                    # 메모리 절약을 위해 로그 레벨 상승
    com.drink.balancegame: INFO
    org.springframework: ERROR    # Spring 로그 최소화
    org.hibernate: ERROR          # Hibernate 로그 최소화
    com.zaxxer.hikari: ERROR      # HikariCP 로그 최소화
  pattern:
    console: "%d{HH:mm:ss} %-5level %logger{20} - %msg%n"  # 간소화된 로그 패턴

# 보안 설정
security:
  require-ssl: ${REQUIRE_SSL:false}  # Railway는 자동 HTTPS 제공